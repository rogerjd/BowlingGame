unit TestBowlingGame;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit
  being tested.

}

interface

uses
  TestFramework, Generics.Collections, BowlingGame;

type
  // Test methods for class TFrameRollsCtrl

  TestTFrameRollsCtrl = class(TTestCase)
  strict private
    FFrameRollsCtrl: TFrameRollsCtrl;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestRecordRoll;
  end;
  // Test methods for class TFrame

  TestTFrame = class(TTestCase)
  strict private
    FFrame: TFrame;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestNeedRollsRecordedInFutureFrame;
  end;
  // Test methods for class TFramesCtrl

  TestTBowlingGame = class(TTestCase)
  strict private
    FBowlingGame: TBowlingGame;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestStart;
    procedure TestRoll;
    procedure TestScoreByFrame;
  end;

implementation


procedure TestTBowlingGame.SetUp;
begin
  FBowlingGame := TBowlingGame.Create;
end;

procedure TestTBowlingGame.TearDown;
begin
  FBowlingGame.Free;
  FBowlingGame := nil;
end;

procedure TestTBowlingGame.TestStart;
begin
  FBowlingGame.Start;
  // TODO: Validate method results
end;

procedure TestTBowlingGame.TestRoll;
var
  NumOfPins: Integer;
begin
  // TODO: Setup method call parameters
  FBowlingGame.Roll(NumOfPins);
  // TODO: Validate method results
end;

procedure TestTBowlingGame.TestScoreByFrame;
var
  ReturnValue: Integer;
begin
  ReturnValue := FBowlingGame.ScoreByFrame;
  // TODO: Validate method results
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTBowlingGame.Suite);
end.

